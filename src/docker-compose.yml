version: '2.2'

networks:
  internal:
    # Use a custom driver
    driver: bridge
    internal: true
  external:
    # Use a custom driver which takes special options
    driver: bridge
    enable_ipv6: true
    driver_opts:
      com.docker.network.enable_ipv6: "true"
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1
        - subnet: fd11:0011:0011:1100::/64
          gateway: fd11:11:11:1100:0:0:0:1
  

services:
  ntp:
    image: cturra/ntp:latest
    container_name: ntp
    restart: always
    networks: 
      - external
    ports:
      - 123:123/udp
    cap_add:
      - SYS_NICE
      - SYS_RESOURCE
      - SYS_TIME
    environment:
      - NTP_SERVERS=time.cloudflare.com
      
  mqtt-broker:
    container_name: emqx-mqtt-broker
    image: emqx/emqx

    ports: 
      - 1884:1883
      - 1885:8083 
      - 1886:1886/udp
      - 82:18083
    
    volumes: 
      - ${PWD}/emqx/conf/plugins/emqx_sn.conf:/opt/emqx/etc/plugins/emqx_sn.conf
      - ${PWD}/emqx/conf/data/loaded_plugins:/opt/emqx/data/loaded_plugins
    networks: 
      - internal
      - external

  http-server:
    build: py-http-server
    container_name: http-server

    environment:
      IS_DOCKER: 1
      STAGE: test
      SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://test:test@db/wise-cube
    networks:
      - internal
      - external
    ports:
      - 80:5000
    depends_on:
      - db
    volumes:
      - ./py-http-server:/src/
      - ./common:/src/common
    restart: always

  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: wise-cube
    networks:
      - internal
    ports:
      - 5432:5432
    expose:
      - 5342
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    restart: always

  node-red:
    environment: 
      - PUID=1000
      # - NODE_OPTIONS:"--unsafe-perm"
    container_name: node-red
    image: nodered/node-red:1.2.0
    environment:
      - TZ=Europe/Amsterdam
    ports:
      - 81:1880
    expose:
      - 1880
    networks:
      - internal
      - external
    volumes:
      - ./node-red/data:/data
    user:
      root:root

  influxdb:
    container_name: influxdb
    image: influxdb
    environment: 
      - INFLUXDB_DB=wise_cube        
      - INFLUXDB_ADMIN_USER=test
      - INFLUXDB_ADMIN_PASSWORD=test
    ports:
      - 8086:8086
    expose: 
      - 8086
    networks:
      - internal
      - external
    
  grafana:
    image: grafana/grafana 
    user: "1000"
    # environment:
    #   - HTTP_USER=test
    #   - HTTP_PASS=test
    #   - INFLUXDB_HOST=influxdb
    #   - INFLUXDB_PORT=8086
    #   - INFLUXDB_NAME=wise_cube
    #   - INFLUXDB_USER=test
    #   - INFLUXDB_PASS=test
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/conf/sample.ini:/etc/grafana/grafana.ini
      - ./grafana/conf/provisioning:/etc/grafana/provisioning
    container_name: grafana
    depends_on:
      - influxdb
    
    ports:
      - 83:3000
    networks: 
      - internal
      - external
