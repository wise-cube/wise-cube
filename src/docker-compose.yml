version: '3.0'

networks:
  ws-internal:
    internal: false

services:
  ntp:
    image: cturra/ntp:latest
    container_name: ntp-server
    restart: always
    ports:
      - 123:123/udp
    cap_add:
      - SYS_NICE
      - SYS_RESOURCE
      - SYS_TIME
    environment:
      - NTP_SERVERS=time.cloudflare.com
      
  mqtt-broker:
    container_name: mqtt-broker
    image: eclipse-mosquitto:latest
    ports: 
      - 1883:1883
    expose:
      - 1883
    volumes: 
      - ./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - ws-internal 

  mqttsn-gateway:
    container_name: mqttsn-gateway
    build: mqtt-sn
    ports: 
    - 1885:1885/udp
    networks:
      - ws-internal 
    volumes:
      - ./mqtt-sn/rsmb.conf:/mqtt/config/rsmb.conf


  http-server:
    build: py-http-server
    container_name: http-server

    environment:
      IS_DOCKER: 1
      STAGE: test
      SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://test:test@db/wise-cube
    networks:
      - ws-internal
    ports:
      - 5000:5000
    depends_on:
      - postgres-db
    volumes:
      - ./py-http-server:/src/
      - ./common:/src/common
    restart: "no"

  postgres-db:
    container_name: postgres-db
    image: postgres:latest
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: wise-cube
    networks:
      - ws-internal
    expose:
      - 5432
    volumes:
      - /tmp/postgres/data:/var/lib/postgresql/data
    restart: always

  node-red:
    environment: 
      - PUID=1000
    container_name: node-red
    image: nodered/node-red:1.2.0
    environment:
      - TZ=Europe/Rome
    ports:
      - 1880:1880
    expose:
      - 1880
    networks:
      - ws-internal
    volumes:
      - ./node-red/data:/data

    
  grafana:

    container_name: grafana
    depends_on:
      - postgres-db
    image: grafana/grafana
    ports:
      - 3000:3000
    networks: 
      - ws-internal
    volumes:
    - ./node-red/sample.ini:/etc/grafana/grafana.ini
    - ./node-red/postgres.yml:/etc/grafana/provisioning/datasources/postgres.yml
    restart: "no"


